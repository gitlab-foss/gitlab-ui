# frozen_string_literal: true

require 'digest/md5'

MESSAGE = <<~MARKDOWN
  ## Reviewer roulette

  Changes that require review have been detected! A merge request is normally
  reviewed by both a reviewer and a maintainer in its primary category (e.g.
  ~frontend or ~backend), and by a maintainer in all other categories.
MARKDOWN

CATEGORY_TABLE_HEADER = <<~MARKDOWN

  To spread load more evenly across eligible reviewers, Danger has randomly picked
  a candidate for each review slot. Feel free to override this selection if you
  think someone else would be better-suited, or the chosen person is unavailable.

  Once you've decided who will review this merge request, mention them as you
  normally would! Danger does not (yet?) automatically notify them for you.

  | Category | Reviewer | Maintainer |
  | -------- | -------- | ---------- |
MARKDOWN

UNKNOWN_FILES_MESSAGE = <<~MARKDOWN

  These files couldn't be categorised, so Danger was unable to suggest a reviewer.
  Please consider creating a merge request to
  [add support](https://gitlab.com/gitlab-org/gitlab-foss/blob/master/lib/gitlab/danger/helper.rb)
  for them.
MARKDOWN

NO_REVIEWER = 'No reviewer available'
NO_MAINTAINER = 'No maintainer available'

def spin_for_category(team, category, random)
  reviewers, traintainers, maintainers =
    %i[reviewer? traintainer? maintainer?].map do |kind|
      team.select do |member|
        member.public_send(kind, category)
      end
    end

  # Make traintainers have triple the chance to be picked as a reviewer
  reviewer = roulette.spin_for_person(reviewers + traintainers + traintainers, random: random)
  maintainer = roulette.spin_for_person(maintainers, random: random) if category != :docs

  {
    "label": helper.label_for_category(category),
    "reviewer": reviewer&.markdown_name,
    "maintainer": maintainer&.markdown_name
  }
end

changes = helper.changes_by_category
categories = changes.keys
component_labels = helper.component_labels

if changes.any?
  team = roulette.project_team
  branch_name = gitlab.mr_json['source_branch']
  random = roulette.new_random(branch_name)

  rows = categories.map do |category|
    spin_for_category(team, category, random)
  end

  # If these are docs-only changes, we need to pick a frontend maintainer for the final review
  if categories == %i[docs]
    frontend_row = spin_for_category(team, :frontend, random)
    # We remove the frontend reviewer as the initial review will be performed by a technical writer
    frontend_row[:reviewer] = nil
    rows << frontend_row
  end

  # Add component-specific UX reviewers
  component_labels.each do |label|
    ux_teammates = helper.ux_reviewers_for_label(label).map { |username| roulette.teammate_with_username(username) }.compact
    ux_reviewer = roulette.spin_for_person(ux_teammates, random: random)
    component_ux_row = {
      "label": "~\"#{label}\"",
      "reviewer": ux_reviewer&.markdown_name,
      "maintainer": nil
    }
    rows << component_ux_row
  end

  roulette_rows = rows.map do |row|
    "| #{row[:label]} | #{row[:reviewer] || NO_REVIEWER} | #{row[:maintainer] || NO_MAINTAINER} |"
  end

  markdown(MESSAGE)
  markdown(CATEGORY_TABLE_HEADER + roulette_rows.join("\n"))
  unless component_labels.empty?
    markdown(
      <<~MARKDOWN
        If your Merge Request changes one or more components, please have it reviewed by a Product Designer.
        One should have been suggested above. Otherwise, or if they are not available, feel free to
        assign to a UX Foundations designer:

        #{helper.foundations_ux_reviewers.map do |username|
          roulette.teammate_with_username(username)
        end.map do |teammate|
          "* #{teammate&.markdown_name}"
        end.join("\n")}
      MARKDOWN
    )
  end
end
